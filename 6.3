20. 有效的括号
难度
简单
给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。
有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。
示例 1:
输入: "()"
输出: true
示例 2:
输入: "()[]{}"
输出: true
示例 3:
输入: "(]"
输出: false
示例 4:
输入: "([)]"
输出: false
示例 5:
输入: "{[]}"
输出: true


官方思路给的是用堆栈解决，但是我还没有学到，可以用ASCII表暴力解决


bool isValid(char * s){
    char st[100000];
    int cnt = 0;
    int len = strlen(s);
    for(int i = 0;i < len;i++){
        if(s[i] == '(' || s[i] == '[' || s[i] == '{'){
            st[cnt] = s[i];
            cnt++;
        }
        if(s[i] == ')' || s[i] == ']' || s[i] == '}'){
            //ASCII表中，左括号与它对应的右括号ASCII值相差不超过二
            //  ( 是 40     ) 是 41
            //  [ 是 91     ] 是 93
            //  { 是 123    } 是 125
            if((cnt-1 >= 0) && (st[cnt-1] - s[i] < 0) && (st[cnt-1] - s[i] >= -2))
                cnt--;
            else {
                return false;
            }
        }
    }
    if(cnt == 0)  {
        return true;
    }  
    return false;
}









