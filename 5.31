面试题39. 数组中出现次数超过一半的数字
难度
简单

数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
 
你可以假设数组是非空的，并且给定的数组总是存在多数元素。
 
示例 1:
输入: [1, 2, 3, 2, 2, 2, 5, 4, 2]
输出: 2
限制：
1 <= 数组长度 <= 50000


int majorityElement(int* nums, int numsSize){
    //摩尔投票法

    if( numsSize == 0){
        return *nums;
    }
    int x = *nums; // 众数
    int votes = 1; // 票数
    int i;
    for( i = 1; i != numsSize; i++ ){
        if( x == nums[i])
            votes++;
        else
            votes--;
        if ( i == numsSize - 1){
            return x;
        }
        if( votes == 0){
            x = nums[i+1];
        }
    }
    return x;
}
摩尔投票法：

票数和： 由于众数出现的次数超过数组长度的一半；若记 众数 的票数为 +1+1+1 ，非众数 的票数为 −1-1−1 ，则一定有所有数字的 票数和 >0> 0>0 。
票数正负抵消： 设数组 nums 中的众数为 xxx ，数组长度为 nnn 。若 nums 的前 aaa 个数字的 票数和 =0= 0=0 ，则 数组后 (n−a)(n-a)(n−a)  个数字的 票数和一定仍 >0>0>0 （即后 (n−a)(n-a)(n−a) 个数字的 众数仍为 xxx ）。







