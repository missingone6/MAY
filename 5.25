面试题22. 链表中倒数第k个节点
难度
简单



输入一个链表，输出该链表中倒数第k个节点。为了符合大多数人的习惯，本题从1开始计数，即链表的尾节点是倒数第1个节点。例如，一个链表有6个节点，从头节点开始，它们的值依次是1、2、3、4、5、6。这个链表的倒数第3个节点是值为4的节点。
 
示例：
给定一个链表: 1->2->3->4->5, 和 k = 2.

返回链表 4->5.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

/*
struct ListNode* getKthFromEnd(struct ListNode* head, int k){
    
    if( head == NULL){
        return NULL;
    }
    struct ListNode* current = head;
    int count = 0;
    for(  ; ; count++ ){
        if( current == NULL ){
            break;
        }else{
            current = current->next;
        }
    }
    current = head;
    for( int i = 0 ; i < count - k ; i++){
        current = current->next;
    }
    return current;

}
*/

//双指针
//不需要知道链表长度，指针1先走k-1步，然后指针2和指针1同时前进，当指针1指向链表最后一个元素时，指针2即为所求。
struct ListNode* getKthFromEnd(struct ListNode* head, int k){


    if( head == NULL ){
        return NULL;
    }
    else if( k == 0){
        return head;
    }

    struct ListNode * former, * latter;
    former = head; 
    latter = head;

    for( int i = 0; i < k ; i++){
        
        if( latter == NULL){
            return NULL;
        }
        latter = latter->next;
    }

    while(latter){
        latter = latter->next;
        former = former->next;
    }
    return former;

}






